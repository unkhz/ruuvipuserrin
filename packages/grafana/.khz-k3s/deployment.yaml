apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:9.5.2
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: archive.ruuvipuserrin.credentials.postgresql.acid.zalan.do
                  key: password
            - name: PG_USER
              valueFrom:
                secretKeyRef:
                  name: archive.ruuvipuserrin.credentials.postgresql.acid.zalan.do
                  key: username
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: archive.ruuvipuserrin.credentials.postgresql.acid.zalan.do
                  key: password
            - name: GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH
              value: /var/lib/grafana/dashboards/all-tags.json
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
              readOnly: true
            - name: dashboards-config
              mountPath: /etc/grafana/provisioning/dashboards
              readOnly: true
            - name: dashboards
              mountPath: /var/lib/grafana/dashboards
              readOnly: true
      volumes:
        - name: grafana-storage
          emptyDir: {}
        - name: datasources
          configMap:
            name: grafana-datasources
        - name: dashboards-config
          configMap:
            name: grafana-dashboards-config
        - name: dashboards
          configMap:
            name: grafana-dashboards

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: apps
  annotations:
    external-dns.alpha.kubernetes.io/hostname: ruuvipuserrin-grafana.khz.fi
spec:
  selector:
    app: grafana
  ports:
    - port: 80
      targetPort: 3000
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  namespace: apps
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/ssl-redirect: 'true'
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - ruuvipuserrin-grafana.khz.fi
      secretName: grafana-tls
  rules:
    - host: ruuvipuserrin-grafana.khz.fi
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 80
